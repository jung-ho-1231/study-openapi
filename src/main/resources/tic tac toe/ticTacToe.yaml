openapi: 3.0.3
info:
  title: Tic Tac Toe
  description: |
    this APi allows writing down down marks on a Tic Tac Toe board
    and request the state of the board or of individual squares.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name : Gameplay
    description:
paths:
  # Whole board operations
  /board:
    get:
      summary: Get the whole board
      description: Retrieves the current stata of the board nad the winner.
      tags:
        - Gameplay
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status
                '
  # Single square operation
  /board/{row}/{column}:
    parameters:
      - $ref: '#/components/parameters/rowParam'
      - $ref: '#/components/parameters/columnParam'
    get:
      summary: Get a single board square
      description: Retrieves the requested square.
      tags:
        - Gameplay
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mark'
        400:
          description: The provided parameters are incorrect
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/errorMessage'
              example: Illegal coordinates
    put:
      tags:
        - Gameplay
      summary: Set a single board square
      description: Places a mark on the board and retrieves the whole board and the winner (if any)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mark'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'

        400:
          description: The provided parameters are incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
              examples:
                illegalCoordinates:
                  value: Illegal coordinates.
                notEmpty:
                  value: Square is not empty
                invalidMark:
                  value: Invalid Mark (X or O).

components:
  parameters:
    rowParam:
      name: row
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/coordinate'
    columnParam:
      name: column
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/coordinate'

  schemas:
    errorMessage:
      type: string
      maxLength: 256
      description: A text  message describing an error
    coordinates:
      type: integer
      minimum: 1
      maximum: 3
      example: 1
    mark:
      type: string
      enum: [".", "X", "O"]
      description: Possible values for a board square. `.` means empty square.
      example: "."
    board:
      type: array
      maxItems: 3
      minItems: 3
      items:
        type: array
        maximum: 3
        minItems: 3
        items:
          $ref: '#/components/schemas/mark'
    winner:
      type: string
      enum: [".", "X", "O"]
      description: Winner of the game. `.` means nobody has won yet.
      example: "."
    status:
      type: object
      properties:
        winner:
          $ref: '#/components/schemas/winner'
        board:
          $ref: '#/components/schemas/board'